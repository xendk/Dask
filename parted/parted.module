<?php

// $Id$

/**
 * Implements hook_form_FORM_ID_alter().
 */
function parted_form_task_node_form_alter(&$form, &$form_state) {
  /*
   $form['parted'] = array(
    '#type' => 'parted',
  );
  $form['test'] = array(
    '#type' => 'markup',
    '#markup' => 'test',
  );
*/
}

/**
 * Implements hook_element_info().
 */
function parted_element_info() {
  $types['parted'] = array(
    '#input' => TRUE,
    '#theme_wrappers' => array('parted'),
    '#process' => array('parted_form_process_parted'),
    // process or pre_render, or both, process setting up roughly, pre_render
    // doing the rest, if the cache doesn't.
  );
  $types['parted_task'] = array(
    '#input' => TRUE,
    '#theme_wrappers' => array('parted_task'),
    '#process' => array('parted_form_process_parted_task'),

  );
  return $types;
}

/**
 * Implements hook_init().
 */
function parted_init() {
  drupal_add_css(drupal_get_path('module', 'parted') . '/parted.css');
}

function parted_form_process_parted($element, $form_state) {
  $element['items'][] = array(
    '#type' => 'parted_task',
    '#delta' => 0,
    '#node' => node_load(1),
  );
  $element['items'][] = array(
    '#type' => 'parted_task',
    '#delta' => 1,
    '#node' => node_load(2),
  );
  return $element;
}

function parted_form_process_parted_task($element, $form_state) {
  $node = $element['#node'];
  dpm($node);
  $element['title'] = array(
    '#type' => 'textfield',
    '#default_value' => $node->title,
  );

  // TODO: don't do this for every node.
  $terms = taxonomy_get_tree(variable_get('task_area_vid', NULL));
  if ($terms) {
    foreach ($terms as $term) {
      $options[$term->tid] = str_repeat('-', $term->depth) . $term->name;
    }
  }

  $element['area'] = array(
    '#type' => 'select',
    '#options' => $options,
    '#default_value' => null,
  );
  
  return $element;
}

/**
 * Theming implementation.
 */
function theme_parted($variables) {
  return '<div class="parted">' . $variables['parted']['#children'] . '</div>';
}

/**
 * Theming implementation.
 */
function theme_parted_task($element) {
  return '<div class="parted-task">' . $element['item']['#children'] . '</div>';
}

/**
 * Implements hook_theme().
 */
function parted_theme() {
  return array(
    'parted' => array(
      'render element' => 'parted',
    ),
    'parted_task' => array(
      'render element' => 'item',
    ),
  );
}
