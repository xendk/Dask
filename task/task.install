<?php
// $Id: node.install,v 1.45 2010/03/01 07:39:12 dries Exp $

/**
 * @file
 * Install, update and uninstall functions for the task module.
 */

/**
 * Implements hook_install().
 */
function task_install() {

  node_type_save($node_info);

  variable_set('node_options_task', array('status'));
  variable_set('node_submitted_task', FALSE);

  // Area field.
  $description = t('The area of this task.');
  $help = t('Select the area of this task.');
  $vocabulary = (object) array(
    'name' => 'Area',
    'description' => $description,
    'machine_name' => 'area',
    'help' => $help,
  );
  taxonomy_vocabulary_save($vocabulary);
  variable_set('task_area_vid', $vocabulary->vid);

}

/**
 * Implements hook_schema().
 */
function task_schema() {
  $schema['task_data'] = array(
    'description' => 'Stores task data.',
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Node id of task.',
      ),
      'vid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Node version id of task.',
      ),
      'state' => array(
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'tiny',
        'description' => 'The state of this task.',
      ),
      'part_of' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'Task this task is part of.',
      ),
      'area' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'The area term id of the task.',
      ),
      'assigned_to' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'The user this task is assigned to.',
      ),
    ),
    'primary key' => array('nid', 'vid'),
    'indexes' => array(
      'state' = array('state'),
      'part_of' = array('part_of'),
      'area' = array('area'),
      'assigned_to' = array('assigned_to'),
    ),
  );

  $schema['task_dependencies'] = array(
    'description' => 'Task dependencies.',
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Node id of task.',
      ),
      'vid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Node version id of task.',
      ),
      'depends_on' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Node id of task depended upon.',
      ),
    ),
    'primary key' => array('nid', 'vid'),
    'indexes' => array(
      'depends_on' = array('depends_on'),
    ),
  );
  
  $schema['task_dirty'] = array(
    'description' => 'Stores which task are dirty and needs update.',
    'fields' => array(
      'nid'  => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Node id of dirty node.',
      ),
    ),
    'primary key' => array('nid'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function task_uninstall() {
  if ($voc = taxonomy_vocabulary_load_multiple(array(), array('machine_name' => 'area'))) {
    $voc = reset($voc);
    taxonomy_vocabulary_delete($voc->vid);
  }
  variable_del('task_area_vid');
}
